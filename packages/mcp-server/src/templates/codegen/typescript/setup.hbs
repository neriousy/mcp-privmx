/**
 * PrivMX WebEndpoint Setup - {{language}}
 * Generated by PrivMX MCP Server (Template)
 */

import { Endpoint } from '@privmx/privmx-webendpoint-sdk';

interface PrivMXConfig {
  userPrivateKey: string;
  solutionId: string;
  bridgeUrl?: string;
}

class PrivMXManager {
  private endpoint: Endpoint | null = null;
  private connectionId: string | null = null;
  private isConnected = false;

  async initialize(config: PrivMXConfig): Promise<string> {
    await Endpoint.setup('/path/to/privmx-webendpoint-assets/');
    this.endpoint = new Endpoint();
    this.connectionId = await this.endpoint.connect({
      userPrivKey: config.userPrivateKey,
      solutionId: config.solutionId,
      platformUrl: config.bridgeUrl,
    });
    this.isConnected = true;
    return this.connectionId;
  }

  isReady(): boolean {
    return this.isConnected && this.endpoint !== null && this.connectionId !== null;
  }

  /** Feature implementations **/
  {{#if (includes features "threads")}}
  {{> thread}}
  {{/if}}
  {{#if (includes features "stores")}}
  {{> store}}
  {{/if}}
  {{#if (includes features "inboxes")}}
  {{> inbox}}
  {{/if}}
  {{#if (includes features "crypto")}}
  {{> crypto}}
  {{/if}}
}

export { PrivMXManager, type PrivMXConfig }; 